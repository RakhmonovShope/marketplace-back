import { ApiProperty } from '@nestjs/swagger';
import { IsNotEmpty, {{#if hasBooleanFields}}IsBoolean, {{/if}}IsString } from 'class-validator';
import { PageableDto } from 'common/common.dto';

export class Create {
{{#each fields}}
  {{#if (eq this.type 'string')}}
    @IsString()
  {{/if}}
  {{#if (eq this.type 'boolean')}}
    @IsBoolean()
  {{/if}}
  @IsNotEmpty()
  @ApiProperty({
  description: '{{this.name}} of the {{camelCase ../name}}',
  example: '{{this.example}}',
  })
  {{this.name}}: {{this.type}};

{{/each}}
}

export class Update extends Create {
@IsString()
@IsNotEmpty()
@ApiProperty({
description: 'Unique identifier for the {{camelCase name}}',
example: '3fa85f64-5717-4562-b3fc-2c963f66afa6',
})
id: string;
}

export class {{pascalCase name}}Response {

{{#each fields}}
  @ApiProperty({
  description: '{{this.name}} of the {{camelCase ../name}}',
  example: '{{this.example}}',
  })
  {{this.name}}: {{this.type}};
{{/each}}
}

export class PageableResponseDto extends PageableDto {
@ApiProperty({
description: 'Array of items for the current page',
isArray: true,
})
data: {{pascalCase name}}Response[];
}
